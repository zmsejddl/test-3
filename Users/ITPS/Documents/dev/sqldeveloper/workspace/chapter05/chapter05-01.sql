--데이터 모델링
--현실 세계의 복잡한 개념(현실 객체)을 단순화하고 추상화시켜 데이터 베이스화하는 과정이다

--데이터베이스 생명주기
--1. 요구사항 수집 및 분석
--사용자들의 요구사항을 듣고 분석하여 데이터베이스 구축의 범위를 정하는 단계
--2. 설계
--분석된 요구사항을 기초로 주요 개념과 업무 프로세스 등을 식별하고(개념적 설계) 사용하는 dbms의 종류에 맞게 변환(논리적 설계)한 후, 
--데이터베이스 스키마를 도출(물리적 설계)한다
--3. 구현
--설계 단계에서 생성한 스키마를 실제 dbms에 적용하여 테이블 및 관련 객체(뷰, 인덱스 등)를 만든다
--관련 소프트웨어에 설계한 데이터베이스를 적용하여 서비스를 제공할 수 있도록 프로그램을 완성한다
--4. 운영
--구현된 데이터베이스를 기반으로 소프트웨어를 구축하여 서비스를 제공한다
--5. 감시 및 개선
--데이터베이스 운영에 따른 시스템의 문제를 관찰하고 데이터베이스 자체의 문제점을 파악하여 개선한다
--이 단계에서는 데이터베이스가 지속적으로 운영될 수 있도록 변경 및 유지보수를 한다

--마당서점의 논리적 모델링
--마당서점은 출판사에서 도서를 공급받아 판매한다
--판매 내역은 매일 기록으로 남기며 고객 서비스와 매출 관리에 활용한다
--마당서점의 요구사항은 다음과 같다
-- - 도서 목록에는 도서번호, 도서이름, 출판사이름, 도서단가를 기록한다(개체)
-- - 출판사 목록에는 출판사이름, 담당자 이름, 전화번호를 기억한다(개체)
-- - 고객 목록에는 고객번호, 고객이름, 주소, 전화번호를 기록한다(개체)
-- - 마당서점은 출판사에서 공급한 도서만 등록하여 관리한다
--(출판사와 도서의 관계는 1:N)
-- - 고객은 여러 번에 걸쳐 여러 권의 도서를 구입할 수 있다
--(고객과 도서의 관계 n:m)
-- - 마당서점은 고객이 도서를 구입한 날(주문일자)과 구매한 가격(주문금액)을 따로 저장한다
--(고객과 도서의 관계에 속성이 존재함)

--관계 대응 수에 따른 관계 타입의 유형
--1. 일대일(1:1) 관계
--좌측 개체 타입에 포함된 개체가 우측 개체 타입에 포함된 개체와 일대일로 대응하는 관계이다
--예를 들어 회사에서 사원이 개인별로 한 대의 컴퓨터만 사용한다면 사원과 컴퓨터는 일대일 관계이다
--2. 일대다(1:n), 다대일(n:1) 관계
--한쪽 개체 타입의 개체 하나가 다른 쪽 개체 타입의 여러 개체와 관계를 맺는 경우이다
--예를 들어 학과와 학생의 소속 관계를 보면, 하나의 학과에는 여러 명의 학생이 소속되어 있어 일대다 관계로 표현할 수 있다
--n은 0이상의 자연수를 말한다
--3. 다대다(n:m) 관계
--각 개체 타입의 개체들이 서로 임의의 개수 개체들과 서로 복합적인 관계를 맺고 있는 경우이다
--예를 들어 학생과 강좌의 수강 관계를 보면, 
--한 학생은 여러 강좌를 수강할 수 있고 한 강좌 역시 여러 학생이 들을 수 있으므로 다대다 관계로 볼 수 있다

--마당서점의 물리적 모델링
--물리적 모델 단계에서는 기존 논리적 모델에서 생성한 개체의 이름과 속성의 이름을 실제 사용할 테이블 이름, 컬럼 이름으로 변경해 주어야 한다
